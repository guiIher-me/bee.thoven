const {
    FileContent,
    TextContent,
} = require('@zenvia/sdk');

const MESSAGES = {
    'ERROR_MUSIC_NOT_FOUND': 'Hmm... NÃ£o conseguimos reconhecer a mÃºsica ğŸ˜“\nVamos tentar de novo, envie um *Ã¡udio de 5 segundos* com a mÃºsica que deseja descobrir!',
    'ERROR_UNEXPECTED': 'Poxa, um erro inesperado aconteceu ğŸ˜¯\nVocÃª pode tentar novamente mais tarde.',
    'MENU_INVALID_OPTION': 'Ops! A opÃ§Ã£o escolhida nÃ£o Ã© vÃ¡lida, digite o nÃºmero ou escreva uma das opÃ§Ãµes acima ğŸ‘†',
    'WELCOME': 'OlÃ¡, que bom ter vocÃª aqui!\nPara comeÃ§ar, envie um Ã¡udio de 5 segundos com a mÃºsica que deseja descobrir!',
    'UNKNOW_MESSAGE_TYPE': 'Hmm... NÃ£o conseguimos entender esse formato de mensagem.\nEnvie apenas o Ã¡udio da mÃºsica!',
    'GOOD_BYE': 'Quando quiser, Ã© sÃ³ enviar novamente um Ã¡udio pra gente!\nAtÃ© a prÃ³xima ğŸ‘‹',
    'ERROR_PLAYERS_NOT_FOUND': 'Ops! NÃ£o foi possÃ­vel encontrar players disponÃ­veis para essa mÃºsica',

    'MUSIC_FOUND': 'Oba! Encontrei essa aqui ğŸ‘‡\n\n'
}
Object.freeze(MESSAGES)

class Message {

    constructor() { }

    static isAudio(messageEvent) {
        return messageEvent.message.contents[0].type === 'file' && messageEvent.message.contents[0].fileMimeType.includes('audio')
    }

    static isText(messageEvent) {
        return messageEvent.message.contents[0].type === 'text'
    }

    static getFileFromUser(messageEvent) {
        return messageEvent.message.contents[0].fileUrl
    }

    static getTextFromUser(messageEvent) {
        return messageEvent.message.contents[0].text
    }

    static toFile(message) {
        return new FileContent(message)
    }

    static toText(message) {
        return new TextContent(message)
    }

}

module.exports = { MESSAGES, Message }